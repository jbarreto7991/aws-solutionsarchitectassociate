AWSTemplateFormatVersion: '2010-09-09'
Description: 'cloudwacth-agent-parameter-store'

#Se deberá crear un "Key Pair"

Parameters:


  InstancesFamily: 
     Description: The Instances Family
     Type: CommaDelimitedList
     Default: "t2.micro,t2.medium,t2.large,t2.xlarge"
    
  KeyPair: 
     Description: "Seleccionar Key Pair"
     Type: AWS::EC2::KeyPair::KeyName

  Vpc: 
     Description: "Seleccionar VPC"
     Type: AWS::EC2::VPC::Id

  Subnet: 
     Description: "Seleccionar Subnet"
     Type: AWS::EC2::Subnet::Id

  
Mappings: 

  RegionAndInstanceEC2TypeToAMIID: 
    us-east-1: 
      "HVM64": "ami-0263e4deb427da90e"
      #"HVM64": "ami-02fe94dee086c0c37"

  RegionAndAvailabilityZoneToSubnet: 
    us-east-1: 
      "AZa": "us-east-1a"
      "AZb": "us-east-1b"


Resources:

#Creacion del recurso IAM Role

  BackendIAMPolicySSM:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        Path: /
        PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action: 
                  - 'ssm:ResumeSession'
                  - 'ssm:UpdateInstanceInformation'
                  - 'ssm:DescribeSessions'
                  - 'ssm:TerminateSession'
                  - 'ssm:StartSession'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'cloudwatch:PutMetricData'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'cloudwatch:ListMetrics'
                  - 'ec2:DescribeTags'
                  Resource: '*'

  BackendIAMServerProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
        Path: /
        Roles:
            - !Ref BackendIAMRoleEC2
                    
  BackendIAMRoleEC2:
    Type: AWS::IAM::Role
    Properties:
        Path: "/"  
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - ec2.amazonaws.com
                  Action:
                    - 'sts:AssumeRole'
        ManagedPolicyArns:
          - !Ref BackendIAMPolicySSM
          - "arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy"
          - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
          - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
        Tags: 
        - Key: Enviroment
          Value: PROD

          
#Creacion de la Instancia BACKEND

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Select [ 0, !Ref InstancesFamily]
      ImageId: !FindInMap [RegionAndInstanceEC2TypeToAMIID, !Ref "AWS::Region", HVM64]
      IamInstanceProfile: !Ref BackendIAMServerProfile
      KeyName: !Ref KeyPair
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash
            
            #Instalación de aplicaciones
            sudo su
            sudo apt-get update
            sudo apt-get install apache2 -y
            sudo apt-get install unzip
            sudo apt-get install install collectd –y
            sudo apt-get install awscli -y
            mkdir /usr/share/collectd
            touch /usr/share/collectd/types.db
            
            #Registro de System Manager - Parameter Store
            #REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/\(.*\)[a-z]/\1/')
            #aws ssm put-parameter --name "AmazonCloudWatch-linux" --description "CloudWatch Agent" --value "" "{"agent":{"metrics_collection_interval":60,"run_as_user":"root"},"logs":{"logs_collected":{"files":{"collect_list":[{"file_path":"/var/log/apache2","log_group_name":"apache2","log_stream_name":"{instance_id}"}]}}},"metrics":{"metrics_collected":{"collectd":{"metrics_aggregation_interval":60},"disk":{"measurement":["used_percent"],"metrics_collection_interval":60,"resources":["*"]},"mem":{"measurement":["mem_used_percent"],"metrics_collection_interval":60},"statsd":{"metrics_aggregation_interval":60,"metrics_collection_interval":10,"service_address":":8125"}}}}" --type "String" --region $REGION 
            
            #Instalación de CloudWatch - Agent
            cd /home/ubuntu
            wget https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip
            unzip AmazonCloudWatchAgent.zip
            sh /home/ubuntu/install.sh
            #service amazon-cloudwatch-agent start
            #service amazon-cloudwatch-agent status

            #sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a stop
            #sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:AmazonCloudWatch-linux -s
            #sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a start

      SecurityGroupIds:
      - !Ref EC2SecurityWeb
      SourceDestCheck: true
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          VolumeSize: "8"
          VolumeType: "gp2"
          DeleteOnTermination: "true"
          Encrypted: "false"
      SubnetId: !Ref Subnet
      Tags:
      - Key: Name
        Value: 'EC2 CloudWatch'   
      - Key: Enviroment
        Value: PROD

 
  EC2SecurityWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: 'Allow Internal Connection' 
        VpcId: !Ref Vpc
        SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          
Outputs: 

  BackendIAMServerProfile: 
    Value: !Ref "BackendIAMServerProfile"
    Export:
      Name: !Sub "BackendIAMServerProfile"
  Ec2Instance:
    Value: !Ref Ec2Instance
    Export:
      Name: !Sub "Ec2Instance"
  EC2SecurityWeb:
    Value: !Ref EC2SecurityWeb
    Export:
      Name: !Sub "EC2SecurityWeb"