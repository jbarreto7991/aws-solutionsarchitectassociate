AWSTemplateFormatVersion: '2010-09-09'
Description: 'lab-secretsmanager-rds-v1.0.0'


Parameters:

  DBInstanceIdentifier:
     Description: The DB Instance Identifier
     Type: String
     Default: "mydb"
     
  DBName:
     Description: The DB table name
     Type: String
     Default: "tasks" 
     
  InstancesDBFamily: 
     Description: The Instances DB Family
     Type: CommaDelimitedList
     Default: "db.t2.micro,db.t2.medium,db.t2.large,db.t2.xlarge"

  
Resources:

#Creación del Secret Manager

Resources:

#Creación del usuario y contraseña de la base de datos

  MySecretRDS:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: MySecretForRDS
      Description: Use GenerateSecretString
      #SecretString: '{"username": !Ref MasterUsername,"password": !Ref SecretPassword}'
      #SecretString: !Ref '{"username": ${MasterUsername},"password": ${SecretPassword}}' 
      GenerateSecretString:
        SecretStringTemplate: '{"username": "administrator"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/{}:&=<>+-.[]$()|,^~!#`;_\?¡¿'
      Tags:
      - Key: Name
        Value: 'Secret Manager RDS'
      - Key: Enviroment
        Value: PROD

#Creacion del Recurso RDS Subnet Group (Base de Datos)

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: For Launching RDS
      DBSubnetGroupName: rds-subnet-group
      SubnetIds:
      - !ImportValue VpcSubnetDatabaseAZa
      - !ImportValue VpcSubnetDatabaseAZb

# Creacion del recurso RDS Security Group

  RDSSecurityGroupMySQL:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: For RDS MySQL
      VpcId: !ImportValue Vpc
      Tags:
      - Key: Name
        Value: RDSSecurityGroupMySQL

#Creacion de la asociacion RDS Security Group y EC2 Security Group

  RDSIngressMySQL:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RDSSecurityGroupMySQL
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      CidrIp: !ImportValue VpcCidrBlock
 
# Creacion del recurso RDS MySQL

  RDSMySQL:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 20
      StorageType: gp2
#      StorageEncrypted: false
#      AllowMajorVersionUpgrade: false
#      AutoMinorVersionUpgrade: false
#      BackupRetentionPeriod: 0
      DeletionProtection: false
#      AvailabilityZone: us-east-1a
      DBInstanceClass: !Select [ 0, !Ref InstancesDBFamily]
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: mysql
#      EngineVersion: 8.0.23
      MasterUsername: !Sub '{{resolve:secretsmanager:${MySecretRDS}::username}}'
#     MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref MySecretRDS, ':SecretString:password}}' ]]
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${MySecretRDS}::password}}'
#      MultiAZ: false
      Port: 3306
      PubliclyAccessible: false
#      PreferredBackupWindow: 13:00-13:30
#      PreferredMaintenanceWindow: mon:13:30-mon:14:00
#      DBSnapshotIdentifier: arn:aws:rds:us-east-1:account_numer:snapshot:snapshot      
      VPCSecurityGroups:
        - !Ref RDSSecurityGroupMySQL      
      Tags:
        - Key: Name
          Value: RDSMySQL
        - Key: Enviroment
          Value: PROD        
        
Outputs: 

  RDSSecurityGroupMySQL: 
    Value: !Ref RDSSecurityGroupMySQL
    Export:
      Name: RDSSecurityGroupMySQL
  RDSIngressMySQL: 
    Value: !Ref RDSIngressMySQL
    Export:
      Name: RDSIngressMySQL
  RDSMySQL: 
    Value: !Ref RDSMySQL
    Export:
      Name: RDSMySQL
  RDSSubnetGroup: 
    Value: !Ref RDSSubnetGroup
    Export:
      Name: RDSSubnetGroup
      