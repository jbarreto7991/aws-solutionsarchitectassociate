
========================================
           S3 Glacier - AWSCLI
========================================

Referencia: https://docs.aws.amazon.com/cli/latest/userguide/cli-services-glacier.html


1. Lanzar un ambiente Cloud9 para Ubuntu 18 (t2.micro)

aws glacier create-vault --account-id - --vault-name myvault

{
    "location": "/068242378542/vaults/myvault"
}


2. Generar un archivo de 3 MB
dd if=/dev/urandom of=largefile bs=3145728 count=1


3. Dividir el archivo en trozos de 1 MB. Validar que se han generado 3 archivos: chunka, chunkb, chunkc

split -b 1048576 --verbose largefile chunk


4. Crear una carga de varias partes (multipart-upload) en Amazon S3 Glacier mediante el comando "initiate-multipart-upload"

aws glacier initiate-multipart-upload --account-id - --archive-description "multipart upload test" --part-size 1048576 --vault-name myvault

{
    "location": "/068242378542/vaults/myvault/multipart-uploads/v7X9LyJuPvQ0188uadbN9TQYd5nPomacxkGb9fj9Q7csXNQAAuIs4_PvTJ0QaAS5Oo3iOrr6KgMhFlpGTE2XNYUEbv8k",
    "uploadId": "v7X9LyJuPvQ0188uadbN9TQYd5nPomacxkGb9fj9Q7csXNQAAuIs4_PvTJ0QaAS5Oo3iOrr6KgMhFlpGTE2XNYUEbv8k"
}


5. Setear el valor del campo "uploadId" en la variable de entorno UPLOADID

UPLOADID="v7X9LyJuPvQ0188uadbN9TQYd5nPomacxkGb9fj9Q7csXNQAAuIs4_PvTJ0QaAS5Oo3iOrr6KgMhFlpGTE2XNYUEbv8k"
echo $UPLOADID


6. Subir el archivo a S3 Glacier

aws glacier upload-multipart-part --upload-id $UPLOADID --body chunkaa --range 'bytes 0-1048575/*' --account-id - --vault-name myvault
{
    "checksum": "0eb1aef3d0993d96df53113450b87cd126b656606f4e7522a1bba460c8b98156"
}

aws glacier upload-multipart-part --upload-id $UPLOADID --body chunkab --range 'bytes 1048576-2097151/*' --account-id - --vault-name myvault
{
    "checksum": "61f0b97d8cf7628af9000a94a77a294671eab11374d3840e249379a88def6cc8"
}

aws glacier upload-multipart-part --upload-id $UPLOADID --body chunkac --range 'bytes 2097152-3145727/*' --account-id - --vault-name myvault
{
    "checksum": "f8b61ac53170d725de5811a3b2e528098a5ce2e0b08c47eeb94cc62724821ee5"
}


7. Calculando el hash del árbol

openssl dgst -sha256 -binary chunkaa > hash1
openssl dgst -sha256 -binary chunkab > hash2
openssl dgst -sha256 -binary chunkac > hash3

cat hash1 hash2 > hash12
openssl dgst -sha256 -binary hash12 > hash12hash

cat hash12hash hash3 > hash123
openssl dgst -sha256 hash123

SHA256(hash123)= 6968a6847664c0c081d3f1a2b74a248d790e66cfe48353cb09ac244dcf1546a5


8. Setear el valor del hash en la variable de entorno TREEHASH

TREEHASH=6968a6847664c0c081d3f1a2b74a248d790e66cfe48353cb09ac244dcf1546a5


9. Completar la carga con el comando "complete-multipart-upload"

aws glacier complete-multipart-upload --checksum $TREEHASH --archive-size 3145728 --upload-id $UPLOADID --account-id - --vault-name myvault
{
    "location": "/068242378542/vaults/myvault/archives/08UaeK_my4CfKiTqjxlfo7Q52bNWKJONKNurVCo0JpfOZo979w189zmuZtNZypLK9BMgVJKErMvZ3LYYkT-Sb5gW3yuuUGjEY_-c5182jWDxpjr7vWmLcZFDbJgWTwMJoak1qrst-A",
    "checksum": "6968a6847664c0c081d3f1a2b74a248d790e66cfe48353cb09ac244dcf1546a5",
    "archiveId": "08UaeK_my4CfKiTqjxlfo7Q52bNWKJONKNurVCo0JpfOZo979w189zmuZtNZypLK9BMgVJKErMvZ3LYYkT-Sb5gW3yuuUGjEY_-c5182jWDxpjr7vWmLcZFDbJgWTwMJoak1qrst-A"
}


10. Verificar el estado de la bóveda. El estado de la bóveda se actualiza aproximadamente una vez al día. 

aws glacier describe-vault --account-id - --vault-name myvault


11. Eliminar los archivos fragmentados y hash que se generaron

rm chunk* hash*