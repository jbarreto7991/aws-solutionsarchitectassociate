AWSTemplateFormatVersion: '2010-09-09'
Description: '2_lab48-ec2'

#Se deber√° crear un "Key Pair previamente"

Parameters:


  InstancesFamily: 
     Description: The Instances Family
     Type: CommaDelimitedList
     Default: "t2.micro,t2.medium,t2.large,t2.xlarge"
    
  KeyPair: 
     Description: "Ingresar el nombre de un Key Pair"
     Type: AWS::EC2::KeyPair::KeyName

  
Mappings: 

  RegionAndInstanceEC2TypeToAMIID: 
    us-east-1: 
      "HVM64": "ami-090fa75af13c156b4"

  RegionAndAvailabilityZoneToSubnet: 
    us-east-1: 
      "AZa": "us-east-1a"
      "AZb": "us-east-1b"


Resources:

#Creacion del recurso IAM Role

  BackendIAMPolicySSM:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        Path: /
        PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action: 
                  - 'ssm:ResumeSession'
                  - 'ssm:UpdateInstanceInformation'
                  - 'ssm:DescribeSessions'
                  - 'ssm:TerminateSession'
                  - 'ssm:StartSession'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'cloudwatch:PutMetricData'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'cloudwatch:ListMetrics'
                  - 'ec2:DescribeTags'
                  Resource: '*'

  BackendIAMServerProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
        Path: /
        Roles:
            - !Ref BackendIAMRoleEC2
                    
  BackendIAMRoleEC2:
    Type: AWS::IAM::Role
    Properties:
        Path: "/"  
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - ec2.amazonaws.com
                  Action:
                    - 'sts:AssumeRole'
        ManagedPolicyArns:
          - !Ref BackendIAMPolicySSM
        Tags: 
        - Key: Enviroment
          Value: PROD

          
#Creacion de la Instancia BACKEND AZ A

  Ec2InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Select [ 0, !Ref InstancesFamily]
      ImageId: !FindInMap [RegionAndInstanceEC2TypeToAMIID, !Ref "AWS::Region", HVM64]
      IamInstanceProfile: !Ref BackendIAMServerProfile
      KeyName: !Ref KeyPair
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash
            
            #Amazon Linux 2
            yum update -y
            yum install -y httpd php
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;
            
            # PHP script to display Instance ID and Availability Zone
            cat << 'EOF' > /var/www/html/index.php
            <!DOCTYPE html>
            <html>
            <body>
                <center>
                <?php
                # Get the instance ID from meta-data and store it in the $instance_id variable
                $url = "http://169.254.169.254/latest/meta-data/instance-id";
                $instance_id = file_get_contents($url);
                # Get the instance's availability zone from metadata and store it in the $zone variable
                $url = "http://169.254.169.254/latest/meta-data/placement/availability-zone";
                $zone = file_get_contents($url);
                ?>
                <h2>EC2 Instance ID: <?php echo $instance_id ?></h2>
                <h2>Availability Zone: <?php echo $zone ?></h2>
                </center>
            </body>
            </html>
            EOF         
      SecurityGroupIds:
      - !Ref EC2SecurityWeb
      SourceDestCheck: true
      SubnetId: !ImportValue VpcSubnetPrivateAZa
      Tags:
      - Key: Name
        Value: 'PROD BACKEND AZ A'   
      - Key: Enviroment
        Value: PROD

  EC2SecurityWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: 'Allow Internal Connection' 
        VpcId: !ImportValue Vpc
        SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0


Outputs: 

  BackendIAMServerProfile: 
    Value: !Ref "BackendIAMServerProfile"
    Export:
      Name: !Sub "BackendIAMServerProfile"
  Ec2InstanceA:
    Value: !Ref Ec2InstanceA
    Export:
      Name: !Sub "Ec2InstanceA"
  EC2SecurityWeb:
    Value: !Ref EC2SecurityWeb
    Export:
      Name: !Sub "EC2SecurityWeb"